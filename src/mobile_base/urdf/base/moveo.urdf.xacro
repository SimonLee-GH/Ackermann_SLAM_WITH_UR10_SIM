<?xml version="1.0"?>
<!--
  Robot model adapted from
https://github.com/CIR-KIT/steer_drive_ros/blob/kinetic-devel/steer_drive_controller/test/common/urdf/steerbot.xacro

  Modifications:
    Remove base_footprint link. Useful for navigation but not necessary for a simple example.
    Added materials for URDF
    Updated inertials

  Geometry:
    The Ackermann steering controllers require the longitudinal
    separation between the front and back wheel axes and the
    lateral separation between the left and right front steering axes.
    
    For this model:
    wheel_separation_h = base_length - 2 * axle_offset = 0. 4
    wheel_separation_w = base_width  + 2 * steer_offset = 0.4
-->
<robot name="mobile_base" xmlns:xacro="http://wiki.ros.org/xacro">
    <!-- Include xacro for inertials, materials and wheels -->
    <xacro:include filename="$(find mobile_base)/urdf/wheel/wheel.xacro" />
    <xacro:include filename="$(find mobile_base)/urdf/hesai_lidar/pandar_XT32M2X.urdf.xacro" />
    <xacro:include filename="$(find mobile_base)/urdf/see3cam/see3cam.urdf.xacro" />


    <!-- Required arg for melodic and kinetic... -->
    <xacro:arg name="namespace" default="/mobile_base" />
    <xacro:property name="namespace" value="$(arg namespace)" scope="global" />

    <!-- Materials -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}"
                iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}"
                iyz="0" izz="${(m/2) * (r*r)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}"
                iyz="0.0" izz="${(2/5) * m * (r*r)}" />
        </inertial>
    </xacro:macro>

    <!-- Math constants -->
    <xacro:property name="deg_to_rad" value="0.01745329251994329577" />

    <!-- Robot base dimensions -->
    <xacro:property name="base_length" value="0.7" />
    <xacro:property name="base_width" value="0.47" />
    <xacro:property name="base_height" value="0.1" />
    <xacro:property name="base_mass" value="20" />
    <!-- origin mass 5 -->

    <!-- Wheel link dimensions -->
    <xacro:property name="wheel_radius" value="0.1" />
    <xacro:property name="wheel_thickness" value="0.05" />
    <xacro:property name="wheel_mass" value="1" />

    <!-- Steering link dimensions -->
    <xacro:property name="steer_radius" value="0.05" />
    <xacro:property name="steer_thickness" value="0.02" />
    <xacro:property name="steer_mass" value="1" />

    <!-- Axle positions -->
    <xacro:property name="axle_offset" value="0.075" />
    <xacro:property name="steer_offset" value="0.02" />

    <!-- Base link -->
    <link name="base_link">
        <visual>
            <origin xyz="-0.275 0 0" rpy="3.14 0 0" />
            <geometry>
                <!-- <mesh filename="package://urdf/base/meshes/moveo_body.dae" /> -->
                <mesh
                    filename="file:///home/simon/SA/mobile_base_ws/src/mobile_base/urdf/base/meshes/moveo_body.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </collision>
        <xacro:solid_cuboid_inertial
            rpy="0 0 0" xyz="0 0 0"
            mass="${base_mass}"
            x="${base_length}" y="${base_width}" z="${base_height}" />
    </link>

    <!-- Robot Footprint -->
    <link name="base_footprint">
        <xacro:box_inertia m="0" w="0" d="0" h="0" />
    </link>

    <joint name="base_joint" type="fixed">
        <parent link="base_link" />
        <child link="base_footprint" />
        <origin xyz="0.0 0.0 ${-(wheel_radius+ 0.05)}" rpy="0 0 0" />
    </joint>

    <!-- Steerable front wheels -->
    <xacro:front_wheel_lr
        name="front_right"
        parent="base"
        reflect="-1"
        wheel_radius="${wheel_radius}"
        wheel_thickness="${wheel_thickness}"
        wheel_mass="${wheel_mass}"
        steer_radius="${steer_radius}"
        steer_thickness="${steer_thickness}"
        steer_mass="${steer_mass}"
        base_length="${base_length}"
        base_width="${base_width}"
        axle_offset="${axle_offset}"
        steer_height="${wheel_radius+steer_offset}">
    </xacro:front_wheel_lr>
    <xacro:front_wheel_lr
        name="front_left"
        parent="base"
        reflect="1"
        wheel_radius="${wheel_radius}"
        wheel_thickness="${wheel_thickness}"
        wheel_mass="${wheel_mass}"
        steer_radius="${steer_radius}"
        steer_thickness="${steer_thickness}"
        steer_mass="${steer_mass}"
        base_length="${base_length}"
        base_width="${base_width}"
        axle_offset="${axle_offset}"
        steer_height="${wheel_radius+steer_offset}">
    </xacro:front_wheel_lr>

    <!-- Rear wheels -->
    <xacro:rear_wheel_lr
        name="rear_right"
        parent="base"
        wheel_radius="${wheel_radius}"
        wheel_thickness="${wheel_thickness}"
        wheel_mass="${wheel_mass}">
        <origin xyz="${-base_length/2+axle_offset} ${-base_width/2-axle_offset} 0"
            rpy="${-90 * deg_to_rad} 0 0" />
    </xacro:rear_wheel_lr>
    <xacro:rear_wheel_lr
        name="rear_left"
        parent="base"
        wheel_radius="${wheel_radius}"
        wheel_thickness="${wheel_thickness}"
        wheel_mass="${wheel_mass}">
        <origin xyz="${-base_length/2+axle_offset} ${+base_width/2+axle_offset} 0"
            rpy="${-90 * deg_to_rad} 0 0" />
    </xacro:rear_wheel_lr>

    <link name="lidar_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="0.125" />
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.0508" length="0.055" />
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.0508" length="0.055" />
            </geometry>
            <material name="LightBlue">
                <color rgba="0.11 0.37 0.56 1.0" />
            </material>
        </visual>
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="lidar_link" />
        <origin xyz="0 0 0.6" rpy="0 0 0" />
    </joint>

    <gazebo reference="lidar_link">
        <sensor name="lidar" type="gpu_lidar">
            <ignition_frame_id>lidar_link</ignition_frame_id>
            <topic>scan</topic>
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1.000000</resolution>
                        <min_angle>0.000000</min_angle>
                        <max_angle>6.280000</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.20000</min>
                    <max>25</max>
                    <resolution>0.015000</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
        </sensor>
    </gazebo>

    <!-- IMU -->
    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </collision>

        <xacro:box_inertia m="0.001" w="0.1" d="0.1" h="0.1" />
    </link>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <ignition_frame_id>imu_link</ignition_frame_id>
            <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu">
            </plugin>

            <topic>imu</topic>
            <always_on>true</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0</bias_mean>
                            <bias_stddev>0</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0</bias_mean>
                            <bias_stddev>0</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>0</stddev>
                            <bias_mean>0</bias_mean>
                            <bias_stddev>0</bias_stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu_link" />
        <origin xyz="0 0 0.01" />
    </joint>


    <!-- controller -->
    <ros2_control name="IgnitionSystem" type="system">
        <hardware>
            <plugin>ign_ros2_control/IgnitionSystem</plugin>
        </hardware>

        <joint name="front_left_steer_joint">
            <command_interface name="position" />
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>

        <joint name="front_right_steer_joint">
            <command_interface name="position" />
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>

        <joint name="rear_left_wheel_joint">
            <command_interface name="velocity" />
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>

        <joint name="rear_right_wheel_joint">
            <command_interface name="velocity" />
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>

        <joint name="front_left_wheel_joint">
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>

        <joint name="front_right_wheel_joint">
            <state_interface name="position" />
            <state_interface name="velocity" />
        </joint>
    </ros2_control>


    <gazebo>
        <plugin filename="ign_ros2_control-system"
            name="ign_ros2_control::IgnitionROS2ControlPlugin">
            <ros>
                <namespace></namespace>
                <remapping>ackermann_steering_controller/reference_unstamped:=cmd_vel</remapping>
                <remapping>ackermann_steering_controller/odometry:=ackodom</remapping>
                <remapping>ackermann_steering_controller/tf_odometry:=tf</remapping>
            </ros>
            <parameters>$(find mobile_base)/config/ackermann_steering_controller.yaml</parameters>
        </plugin>
    </gazebo>
</robot>